fc_deep:
  local_dataset:
    train: "train.npz"
    test: "test.npz"
#    train: "train.npz"
#    test: "test.npz"
#    central_test: "mnist.npz"
    central_test: None


  logic:
#    mode: "file"
#    dir: "."
    mode: "directory"
    dir: "data"

  gpu: True # True or False
  result:
    pred: "y_pred.csv"
    target: "y_test.csv"


  fed_hyper_params:
    max_iter: 10
    n_classes: 10
    federated_model: 'FedAVG'
    batch_count: 1



  train_config:
    torch_loader: False # True: using torchvision Dataloader, False using custom Dataloader
    batch_size: 32
    test_batch_size: 32
    epochs: 1
    optimizer:
      name: 'SGD'
      param:
        lr: 0.1
    loss:
      name: 'CrossEntropyLoss'


  model: # 'cnn' or 'cnn.py' or layers_dict
    name: 'cnn.py'
    n_classes: 10
    in_features: 1
#    name: 'cnn'
#    n_classes: 10
#    - type: 'Conv2d'
#      param:
#        in_channels: None
#        out_channels: 32
#        kernel_size: 3
#        stride: 1
#        padding: 1
#        bias: True
#    - type: 'MaxPool2d'
#      param:
#        kernel_size: 2
#        stride: 2
#    - type: 'ReLU'
#    - type: 'Conv2d'
#      param:
#        in_channels: 32
#        out_channels: 64
#    - type: 'MaxPool2d'
#    - type: 'ReLU'
#    - type: 'Flatten'
#    - type: 'Linear'
#      param:
#        in_features: None
#        out_features: 128
#        bias: True
#    - type: 'ReLU'
#    - type: 'Linear'
#      param:
#        in_features: 128
#        out_features: 10